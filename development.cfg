[buildout]
extends = base.cfg

parts +=
# development tools
    py
    zptlint
    pyflakes
    pep8
    omelette
    releaser
    sphinxbuilder
    test
    diazo

# deployment tools
    fabfile
    fabric

# generate config files in ./etc
    nginx-conf
    diazo-ini
    development-ini

sqlalchemy_url = sqlite:///%(here)s/../var/homebrud.db


# =========================
# Develop external packages
# =========================
extensions += mr.developer
sources = sources
auto-checkout = *
develop =
    src/homebrud

[sources]
# niteoweb.fabfile = git git@github.com:niteoweb/niteoweb.fabfile.git
homebrud = git git@git.assembla.com:homebrud.git

# =============================================================
# Prepare a python interpreter with all buildout eggs installed
# =============================================================
[py]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
extra-paths = ${buildout:directory}
dependent-scripts = true
interpreter = py


# ===============================
# Prepare syntax validation tools
# ===============================
[zptlint]
recipe = zc.recipe.egg
eggs =
   zptlint
scripts =
   zptlint

[pyflakes]
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'

[pep8]
recipe = zc.recipe.egg
eggs =
   pep8
scripts =
   pep8


# ===============================================
# Mirrors python namespaces into one handy folder
# ===============================================
[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


# =====================================
# Prepare commands for making a release
# =====================================
[releaser]
recipe = zc.recipe.egg
eggs = jarn.mkrelease


# ======================================
# Prepare Sphinx documentation generator
# ======================================
[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs/sphinx
interpreter = ${buildout:directory}/bin/zopepy


# ==========================================
# Prepare test-runner for running unit tests
# ==========================================
[test]
recipe = zc.recipe.testrunner
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']
eggs =
    ${buildout:eggs}


# ====================================
# Configure Fabric deployment commands
# ====================================
[fabric]
recipe = zc.recipe.egg
eggs =
    Fabric
    niteoweb.fabfile

[fabfile]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/fabfile.py.in
output = ${buildout:directory}/fabfile.py


# ==========================================
# Generate config files from ./etc_templates
# ==========================================
[diazo-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/diazo.ini.in
output = ${buildout:directory}/etc/diazo.ini

[nginx-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/nginx.conf.in
output = ${buildout:directory}/etc/nginx.conf

[development-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/development.ini.in
output = ${buildout:directory}/etc/development.ini
port = 8080
